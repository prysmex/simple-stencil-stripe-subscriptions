/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Product, ProductWithPrice } from "./components/pricing-table/pricing-table";
import { Translations } from "./utils/locale";
import { Price, Product as Product1 } from "./components/pricing-table/pricing-table";
export { Product, ProductWithPrice } from "./components/pricing-table/pricing-table";
export { Translations } from "./utils/locale";
export { Price, Product as Product1 } from "./components/pricing-table/pricing-table";
export namespace Components {
    interface HighlightedProduct {
        "product": Product;
    }
    interface OneProduct {
        "product": ProductWithPrice;
        "translations": Translations;
    }
    interface PricingTable {
        "extraProducts": Product1[];
        "prices": Price[];
        /**
          * The products
         */
        "products": Product1[];
        "translations": Translations;
    }
}
export interface HighlightedProductCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLHighlightedProductElement;
}
export interface OneProductCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLOneProductElement;
}
declare global {
    interface HTMLHighlightedProductElement extends Components.HighlightedProduct, HTMLStencilElement {
    }
    var HTMLHighlightedProductElement: {
        prototype: HTMLHighlightedProductElement;
        new (): HTMLHighlightedProductElement;
    };
    interface HTMLOneProductElement extends Components.OneProduct, HTMLStencilElement {
    }
    var HTMLOneProductElement: {
        prototype: HTMLOneProductElement;
        new (): HTMLOneProductElement;
    };
    interface HTMLPricingTableElement extends Components.PricingTable, HTMLStencilElement {
    }
    var HTMLPricingTableElement: {
        prototype: HTMLPricingTableElement;
        new (): HTMLPricingTableElement;
    };
    interface HTMLElementTagNameMap {
        "highlighted-product": HTMLHighlightedProductElement;
        "one-product": HTMLOneProductElement;
        "pricing-table": HTMLPricingTableElement;
    }
}
declare namespace LocalJSX {
    interface HighlightedProduct {
        "onProductClicked"?: (event: HighlightedProductCustomEvent<Product>) => void;
        "product"?: Product;
    }
    interface OneProduct {
        "onProductClicked"?: (event: OneProductCustomEvent<ProductWithPrice>) => void;
        "product"?: ProductWithPrice;
        "translations"?: Translations;
    }
    interface PricingTable {
        "extraProducts"?: Product1[];
        "prices"?: Price[];
        /**
          * The products
         */
        "products"?: Product1[];
        "translations"?: Translations;
    }
    interface IntrinsicElements {
        "highlighted-product": HighlightedProduct;
        "one-product": OneProduct;
        "pricing-table": PricingTable;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "highlighted-product": LocalJSX.HighlightedProduct & JSXBase.HTMLAttributes<HTMLHighlightedProductElement>;
            "one-product": LocalJSX.OneProduct & JSXBase.HTMLAttributes<HTMLOneProductElement>;
            "pricing-table": LocalJSX.PricingTable & JSXBase.HTMLAttributes<HTMLPricingTableElement>;
        }
    }
}
